terraform {
  required_version = ">= 1.6.0"
  required_providers {
    azurerm = { source = "hashicorp/azurerm", version = "~> 3.113" }
  }
  
  backend "azurerm" {
    resource_group_name  = "terraform-state-rg"
    storage_account_name = "tfstatecloudterraform"
    container_name       = "tfstate"
    key                  = "cve-processor.terraform.tfstate"
  }
}

provider "azurerm" {
  features {}
}

variable "prefix" { 
  description = "Prefix for all resources"
  type        = string
  default     = "cve-processor" 
}
variable "location" { 
  description = "Azure region for resources"
  type        = string
  default     = "westus" 
}
variable "environment" {
  description = "Environment name (dev, staging, prod)"
  type        = string
  default     = "dev"
}
variable "nvd_api_key" {
  description = "NVD API key for enhanced rate limits"
  type        = string
  sensitive   = true
}
variable "claude_api_key" {
  description = "Claude API key"
  type        = string
  sensitive   = true
}
variable "sql_admin_username" {
  description = "SQL Server admin username"
  type        = string
  default     = "sqladmin"
}
variable "sql_admin_password" {
  description = "SQL Server admin password"
  type        = string
  sensitive   = true
}

locals {
  name_prefix = "${var.prefix}-${var.environment}"
  common_tags = {
    Environment = var.environment
    Project     = "CVE-Processor"
    ManagedBy   = "Terraform"
  }
}

# Resource Group
resource "azurerm_resource_group" "main" {
  name     = "${local.name_prefix}-rg"
  location = var.location
  tags     = local.common_tags
}

# Storage Account for queues and function storage
resource "azurerm_storage_account" "main" {
  name                     = replace("${local.name_prefix}storage", "-", "")
  resource_group_name      = azurerm_resource_group.main.name
  location                 = azurerm_resource_group.main.location
  account_tier             = "Standard"
  account_replication_type = "LRS"
  min_tls_version          = "TLS1_2"
  
  tags = local.common_tags
}

# Storage Queue for CVE processing
resource "azurerm_storage_queue" "cve_processing" {
  name                 = "cve-processing-queue"
  storage_account_name = azurerm_storage_account.main.name
}

# Key Vault for secure secrets
resource "azurerm_key_vault" "main" {
  name                = "${local.name_prefix}-kv"
  location            = azurerm_resource_group.main.location
  resource_group_name = azurerm_resource_group.main.name
  tenant_id           = data.azurerm_client_config.current.tenant_id
  sku_name            = "standard"
  
  access_policy {
    tenant_id = data.azurerm_client_config.current.tenant_id
    object_id = data.azurerm_client_config.current.object_id
    
    secret_permissions = [
      "Get", "List", "Set", "Delete", "Backup", "Restore", "Recover", "Purge"
    ]
  }
  
  tags = local.common_tags
}

data "azurerm_client_config" "current" {}

# SQL Server and Database
resource "azurerm_mssql_server" "main" {
  name                         = "${local.name_prefix}-sqlserver"
  resource_group_name          = azurerm_resource_group.main.name
  location                     = azurerm_resource_group.main.location
  version                      = "12.0"
  administrator_login          = var.sql_admin_username
  administrator_login_password = var.sql_admin_password
  minimum_tls_version          = "1.2"
  
  azuread_administrator {
    login_username = "aad-admin"
    object_id      = data.azurerm_client_config.current.object_id
  }
  
  tags = local.common_tags
}

resource "azurerm_mssql_firewall_rule" "azure_services" {
  name             = "AllowAzureServices"
  server_id        = azurerm_mssql_server.main.id
  start_ip_address = "0.0.0.0"
  end_ip_address   = "0.0.0.0"
}

resource "azurerm_mssql_database" "main" {
  name           = "${local.name_prefix}-db"
  server_id      = azurerm_mssql_server.main.id
  collation      = "SQL_Latin1_General_CP1_CI_AS"
  max_size_gb    = 5
  sku_name       = "GP_S_Gen5_1"
  auto_pause_delay_in_minutes = 60
  min_capacity = 0.5
  
  tags = local.common_tags
}

# App Service Plan for Azure Functions
resource "azurerm_service_plan" "functions" {
  name                = "${local.name_prefix}-functions-plan"
  resource_group_name = azurerm_resource_group.main.name
  location            = azurerm_resource_group.main.location
  os_type             = "Linux"
  sku_name            = "Y1"  # Consumption plan
  
  tags = local.common_tags
}

# Function App for NVD Ingestion
resource "azurerm_linux_function_app" "nvd_ingestion" {
  name                = "${local.name_prefix}-nvd-func"
  resource_group_name = azurerm_resource_group.main.name
  location            = azurerm_resource_group.main.location
  service_plan_id     = azurerm_service_plan.functions.id
  storage_account_name = azurerm_storage_account.main.name
  storage_account_access_key = azurerm_storage_account.main.primary_access_key

  site_config {
    application_stack {
      python_version = "3.11"
    }
  }

  app_settings = {
    "FUNCTIONS_WORKER_RUNTIME" = "python"
    "NVD_API_KEY" = var.nvd_api_key
    "SQL_CONNECTION_STRING" = "Driver={ODBC Driver 18 for SQL Server};Server=tcp:${azurerm_mssql_server.main.fully_qualified_domain_name},1433;Database=${azurerm_mssql_database.main.name};Uid=${var.sql_admin_username};Pwd=${var.sql_admin_password};Encrypt=yes;TrustServerCertificate=no;Connection Timeout=30;"
    "STORAGE_CONNECTION_STRING" = azurerm_storage_account.main.primary_connection_string
    "CVE_PROCESSING_QUEUE_NAME" = azurerm_storage_queue.cve_processing.name
    "APPLICATIONINSIGHTS_CONNECTION_STRING" = azurerm_application_insights.main.connection_string
  }

  tags = local.common_tags
}

# Function App for SOC Processing
resource "azurerm_linux_function_app" "soc_processor" {
  name                = "${local.name_prefix}-soc-func"
  resource_group_name = azurerm_resource_group.main.name
  location            = azurerm_resource_group.main.location
  service_plan_id     = azurerm_service_plan.functions.id
  storage_account_name = azurerm_storage_account.main.name
  storage_account_access_key = azurerm_storage_account.main.primary_access_key

  site_config {
    application_stack {
      python_version = "3.11"
    }
  }

  app_settings = {
    "FUNCTIONS_WORKER_RUNTIME" = "python"
    "CLAUDE_API_KEY" = var.claude_api_key
    "SQL_CONNECTION_STRING" = "Driver={ODBC Driver 18 for SQL Server};Server=tcp:${azurerm_mssql_server.main.fully_qualified_domain_name},1433;Database=${azurerm_mssql_database.main.name};Uid=${var.sql_admin_username};Pwd=${var.sql_admin_password};Encrypt=yes;TrustServerCertificate=no;Connection Timeout=30;"
    "STORAGE_CONNECTION_STRING" = azurerm_storage_account.main.primary_connection_string
    "APPLICATIONINSIGHTS_CONNECTION_STRING" = azurerm_application_insights.main.connection_string
  }

  tags = local.common_tags
}

############################
# Web App Plan + Web App  #
############################

# Dedicated Linux plan for web app (B1 tier)
resource "azurerm_service_plan" "web" {
  name                = "${local.name_prefix}-web-plan"
  resource_group_name = azurerm_resource_group.main.name
  location            = azurerm_resource_group.main.location
  os_type             = "Linux"
  sku_name            = "F1"

  tags = local.common_tags
}

resource "azurerm_linux_web_app" "webapp" {
  name                = "${local.name_prefix}-webapp"
  resource_group_name = azurerm_resource_group.main.name
  location            = azurerm_resource_group.main.location
  service_plan_id     = azurerm_service_plan.web.id
  client_certificate_mode           = "Optional"

  site_config {
    application_stack {
      python_version = "3.11"
    }
    always_on = false
    use_32_bit_worker = false
    app_command_line = "bash startup.sh"
  }

  app_settings = {
    "WEBSITES_PORT"                         = "8000"
    "SCM_DO_BUILD_DURING_DEPLOYMENT"        = "true"
    "SQL_CONNECTION_STRING"                 = "Driver={ODBC Driver 18 for SQL Server};Server=tcp:${azurerm_mssql_server.main.fully_qualified_domain_name},1433;Database=${azurerm_mssql_database.main.name};Uid=${var.sql_admin_username};Pwd=${var.sql_admin_password};Encrypt=yes;TrustServerCertificate=no;Connection Timeout=30;"
    "APPLICATIONINSIGHTS_CONNECTION_STRING"  = azurerm_application_insights.main.connection_string
  }

  tags = local.common_tags
}

# Application Insights for monitoring
resource "azurerm_application_insights" "main" {
  name                = "${local.name_prefix}-appinsights"
  location            = azurerm_resource_group.main.location
  resource_group_name = azurerm_resource_group.main.name
  application_type    = "web"
  
  tags = local.common_tags
}

# Outputs
output "resource_group_name" {
  value = azurerm_resource_group.main.name
}

output "sql_server_fqdn" {
  value = azurerm_mssql_server.main.fully_qualified_domain_name
}

output "database_name" {
  value = azurerm_mssql_database.main.name
}

output "webapp_name" {
  value       = azurerm_linux_web_app.webapp.name
  description = "Name of the web application"
}

output "webapp_url" {
  value       = "https://${azurerm_linux_web_app.webapp.default_hostname}"
  description = "URL for the CVE processor web application"
}

output "nvd_function_name" {
  value = azurerm_linux_function_app.nvd_ingestion.name
  description = "Name of the NVD ingestion function"
}

output "soc_function_name" {
  value = azurerm_linux_function_app.soc_processor.name
  description = "Name of the SOC processor function"
}

output "sql_admin_username" {
  value       = var.sql_admin_username
  description = "SQL admin username"
}
